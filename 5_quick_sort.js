// данная сортировка работает с помощью рекурсии
// рекурсия - это когда функция вызывает сама себя
// но при этом должно быть условия вызода из фукнции
// иначе будет бесконечный вызов функции

// работает по эффективности O(log2n * n)

const array = [
  4, 5, 2, 45, 6, 7, 3, 2, 5, 4, 0, 9, 56, 67, -56, 23, -456, 345, 678,
]; // Определение исходного массива для сортировки
let counter = 0

function quickSort(array) {
  // создаем базовый случай если в массиве один элемент
  if (array.length <= 1) {
    return array;
  }

  // дальше находим опорный элемент
  // находим индекс серединного элемента
  // используем Math.floor чтобы округлить значение
  // так как количество элементов может быть нечетным
  let pivotIndex = Math.floor(array.length / 2);

  // получаем сам элемент подставляя индекс в массив
  let pivot = array[pivotIndex];

  // создаем массив где будем храниться числа меньше опорного числа
  let less = [];

  // создаем массив где будем хранить числа больше чем опорное
  let greater = [];

  for (let i = 0; i < array.length; i++) {

    // запускаем счетчик для подсчета количества операций
    counter++
    if (i === pivotIndex) {
      continue;
    }
    // с помощью условия проверяем больше или меньше число опорного элемента
    // и добавляем в нужный массив это число
    if (array[i] < pivot) {
      less.push(array[i]);
    } else {
      greater.push(array[i]);
    }
  }

  return [...quickSort(less), pivot, ...quickSort(greater)]
}


// вызываем фукнцию и смотрим в консоли результат
// также запускаем счетчик для проверки количества операций

console.log(quickSort(array)) // [ -456, -56,  0,  2,  2,   3, 4,   4,  5,  5,  6,   7, 9,  23, 45, 56, 67, 345, 678]
console.log('counter: ', counter) // 67

// Получается есть три вида сортировки, которые мы можем использовать в работе
// Линейный, бинарный, пузырьковый, рекурсивный
// Нет лучшего метода для сортировки, потому что эффективность алгоритма зависит от длинны массива
// Следовательно, для определенных задач мы можем выбирать какой метод нам больше подходит
